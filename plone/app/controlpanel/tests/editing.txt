Editing Control Panel
=====================

Test setup::

    >>> app = layer['app']
    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(app)
    >>> browser.handleErrors = False
    >>> browser.addHeader('Authorization', 'Basic admin:secret')
    >>> portal = layer['portal']
    >>> portal_url = portal.absolute_url()

Set up plone.app.registry editing settings::

    >>> from zope.component import getUtility
    >>> from plone.registry.interfaces import IRegistry
    >>> from plone.app.controlpanel.interfaces import IEditingSchema
    >>> registry = getUtility(IRegistry)
    >>> settings = registry.forInterface(IEditingSchema)


Viewing the site control panel
-----------------------------

    >>> browser.open('http://nohost/plone/@@editing-controlpanel')
    >>> browser.url
    'http://nohost/plone/@@editing-controlpanel'

Click the cancel button:

    >>> browser.getControl(name="form.buttons.cancel").click()
    >>> browser.url.endswith('plone_control_panel')
    True

There should be still no changes:

    >>> 'Changes canceled.' in browser.contents
    True


Visible ids
-----------

By default 'visible ids' are disabled::

    >>> settings.visible_ids
    False

    >>> browser.open(portal_url + '/@@editing-controlpanel')
    >>> browser.getControl(name='form.widgets.visible_ids:list').value
    []

Set 'visible ids' to True on control panel::

    >>> browser.getControl(name='form.widgets.visible_ids:list').value = [True]
    >>> browser.getControl(name="form.buttons.save").click()
    >>> "Changes saved." in browser.contents
    True
    >>> browser.url.endswith('editing-controlpanel')
    True

Confirm that the visible ids setting has been stored in plone.app.registry::

    >>> settings.visible_ids
    True

Confirm that visible ids show up on the page::

    >>> browser.open(portal_url + '/++add++Document')
    >>> browser.getControl("Save").click()

XXX: Figure out how the visible_id settings is supposed to work.


Enable link integrity checks
----------------------------

By default 'enable link integrity checks' is enabled::

    >>> settings.enable_link_integrity_checks
    True

    >>> browser.open(portal_url + '/@@editing-controlpanel')
    >>> browser.getControl(name='form.widgets.enable_link_integrity_checks:list').value
    ['selected']

Set 'enable link integrity checks' to False::

    >>> browser.getControl(name='form.widgets.enable_link_integrity_checks:list').value = []
    >>> browser.getControl(name="form.buttons.save").click()
    >>> browser.url.endswith('editing-controlpanel')
    True

Confirm that the 'enable_link_integrity_checks' setting has been stored in plone.app.registry::

    >>> settings.enable_link_integrity_checks
    False

Confirm that the plone.app.registry setting is actually used by
plone.app.linkintegrity::

    >>> from plone.app.linkintegrity.interfaces import ILinkIntegrityInfo
    >>> ILinkIntegrityInfo(layer['request']).integrityCheckingEnabled()
    False


Default Editor
--------------

By default 'TinyMCE' is the default editor::

    >>> settings.default_editor
    u'TinyMCE'

    >>> browser.open(portal_url + '/@@editing-controlpanel')
    >>> browser.getControl(name='form.widgets.default_editor:list').value
    ['TinyMCE']

By default 'TinyMCE' is the only option::

    >>> browser.getControl(name='form.widgets.default_editor:list').options
    ['None', 'TinyMCE']

Set 'default editor' setting to None::

    >>> browser.getControl(name='form.widgets.default_editor:list').value = ['None']
    >>> browser.getControl(name="form.buttons.save").click()
    >>> browser.url.endswith('editing-controlpanel')
    True

Confirm that the 'default_editor' setting has been stored in plone.app.registry::

    >>> settings.default_editor
    'None'

Confirm that the 'default_editor' setting is acutally used in plone.app.form::

XXX: TODO

Confirm that the 'default_editor' setting is acutally used in
plone.app.textfield::

XXX: TODO


Lock on TTW edit
----------------

By default 'lock on ttw edit' is enabled::

    >>> settings.lock_on_ttw_edit
    True

    >>> browser.open(portal_url + '/@@editing-controlpanel')
    >>> browser.getControl(name='form.widgets.lock_on_ttw_edit:list').value
    ['selected']

Set 'lock on ttw edit' to False::

    >>> browser.getControl(name='form.widgets.lock_on_ttw_edit:list').value = []
    >>> browser.getControl(name="form.buttons.save").click()
    >>> browser.url.endswith('editing-controlpanel')
    True

Confirm that the 'lock_on_ttw_edit' setting has been stored in plone.app.registry::

    >>> settings.lock_on_ttw_edit
    False

Confirm that the 'lock_on_ttw_edit' setting is actually used::

XXX: TODO


External Editor
---------------

By default 'external editor' is disabled::

    >>> settings.ext_editor
    False

    >>> browser.open(portal_url + '/@@editing-controlpanel')
    >>> browser.getControl(name='form.widgets.ext_editor:list').value
    []

Set 'external editor' to True::

    >>> browser.getControl(name='form.widgets.ext_editor:list').value = ['selected']
    >>> browser.getControl(name="form.buttons.save").click()
    >>> browser.url.endswith('editing-controlpanel')
    True

Confirm that the 'external editor' setting has been stored in plone.app.registry::

    >>> settings.ext_editor
    True
